<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="11" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="63870" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:46:18Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="63870" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:46:18Z">
      <class name="testcases.Functional2">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testcases.Functional2@204f30ec]" name="beforeTest" is-config="true" duration-ms="1" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases.Functional2@204f30ec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testcases.Functional2@204f30ec]" name="beforeClass" is-config="true" duration-ms="0" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="func1(java.lang.Integer, java.lang.String)[pri:0, instance:testcases.Functional2@204f30ec]" name="func1" duration-ms="0" started-at="2019-10-20T19:45:14Z" data-provider="dp" finished-at="2019-10-20T19:45:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- func1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases.Functional2@204f30ec]" name="afterMethod" is-config="true" duration-ms="1" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="func1(java.lang.Integer, java.lang.String)[pri:0, instance:testcases.Functional2@204f30ec]" name="func1" duration-ms="1" started-at="2019-10-20T19:45:14Z" data-provider="dp" finished-at="2019-10-20T19:45:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- func1 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases.Functional2@204f30ec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases.Functional2@204f30ec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases.Functional2@204f30ec]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="func2()[pri:0, instance:testcases.Functional2@204f30ec]" name="func2" duration-ms="0" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- func2 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases.Functional2@204f30ec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases.Functional2@204f30ec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="func3()[pri:0, instance:testcases.Functional2@204f30ec]" name="func3" duration-ms="2" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- func3 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases.Functional2@204f30ec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testcases.Functional2@204f30ec]" name="afterClass" is-config="true" duration-ms="1" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testcases.Functional2@204f30ec]" name="afterTest" is-config="true" duration-ms="1" started-at="2019-10-20T19:46:18Z" finished-at="2019-10-20T19:46:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- testcases.Functional2 -->
      <class name="testcases.Functional">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:testcases.Functional@77cd7a0]" name="beforeSuite" is-config="true" duration-ms="15" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testcases.Functional@77cd7a0]" name="beforeClass" is-config="true" duration-ms="0" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="func1(java.lang.Integer, java.lang.String)[pri:0, instance:testcases.Functional@77cd7a0]" name="func1" duration-ms="5" started-at="2019-10-20T19:45:14Z" data-provider="dp" finished-at="2019-10-20T19:45:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- func1 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases.Functional@77cd7a0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases.Functional@77cd7a0]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="func1(java.lang.Integer, java.lang.String)[pri:0, instance:testcases.Functional@77cd7a0]" name="func1" duration-ms="1" started-at="2019-10-20T19:45:14Z" data-provider="dp" finished-at="2019-10-20T19:45:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- func1 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases.Functional@77cd7a0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases.Functional@77cd7a0]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases.Functional@77cd7a0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="func2()[pri:0, instance:testcases.Functional@77cd7a0]" name="func2" duration-ms="0" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- func2 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases.Functional@77cd7a0]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases.Functional@77cd7a0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="func3()[pri:0, instance:testcases.Functional@77cd7a0]" name="func3" duration-ms="1" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- func3 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases.Functional@77cd7a0]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testcases.Functional@77cd7a0]" name="afterClass" is-config="true" duration-ms="0" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:testcases.Functional@77cd7a0]" name="afterSuite" is-config="true" duration-ms="0" started-at="2019-10-20T19:46:18Z" finished-at="2019-10-20T19:46:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testcases.Functional -->
      <class name="testcases.NewTest">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases.NewTest@e25b2fe]" name="beforeMethod" is-config="true" duration-ms="5952" started-at="2019-10-20T19:45:14Z" finished-at="2019-10-20T19:45:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="LoginSuccess()[pri:0, instance:testcases.NewTest@e25b2fe]" name="LoginSuccess" duration-ms="2667" started-at="2019-10-20T19:45:20Z" finished-at="2019-10-20T19:45:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginSuccess -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases.NewTest@e25b2fe]" name="afterMethod" is-config="true" duration-ms="672" started-at="2019-10-20T19:45:22Z" finished-at="2019-10-20T19:45:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases.NewTest@e25b2fe]" name="beforeMethod" is-config="true" duration-ms="4973" started-at="2019-10-20T19:45:23Z" finished-at="2019-10-20T19:45:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="LoginunSuccess()[pri:0, instance:testcases.NewTest@e25b2fe]" name="LoginunSuccess" duration-ms="40952" started-at="2019-10-20T19:45:28Z" finished-at="2019-10-20T19:46:09Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.cssSelector: [class='account-info']' (tried for 20 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.cssSelector: [class='account-info']' (tried for 20 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:113)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:283)
at testbase.TestBase.waitForElementClickable(TestBase.java:133)
at testcases.NewTest.LoginunSuccess(NewTest.java:46)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"[class='account-info']"}
  (Session info: chrome=77.0.3865.120)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'LAPTOP-JEI8AS0O', ip: '192.168.99.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_211'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 77.0.3865.120, chrome: {chromedriverVersion: 77.0.3865.40 (f484704e052e0..., userDataDir: C:\Users\fakhr\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:54378}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 79dc86fc485f0ad08c748ab951c3aef5
*** Element info: {Using=css selector, value=[class='account-info']}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:416)
at org.openqa.selenium.By$ByCssSelector.findElement(By.java:431)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy16.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:260)
... 27 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginunSuccess -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases.NewTest@e25b2fe]" name="afterMethod" is-config="true" duration-ms="675" started-at="2019-10-20T19:46:09Z" finished-at="2019-10-20T19:46:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases.NewTest@e25b2fe]" name="beforeMethod" is-config="true" duration-ms="4593" started-at="2019-10-20T19:46:10Z" finished-at="2019-10-20T19:46:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="verifyListOptionOnDashboard()[pri:0, instance:testcases.NewTest@e25b2fe]" name="verifyListOptionOnDashboard" duration-ms="2631" started-at="2019-10-20T19:46:14Z" finished-at="2019-10-20T19:46:17Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [10] but found [12]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [10] but found [12]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:662)
at testcases.NewTest.verifyListOptionOnDashboard(NewTest.java:39)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyListOptionOnDashboard -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases.NewTest@e25b2fe]" name="afterMethod" is-config="true" duration-ms="681" started-at="2019-10-20T19:46:17Z" finished-at="2019-10-20T19:46:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testcases.NewTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
